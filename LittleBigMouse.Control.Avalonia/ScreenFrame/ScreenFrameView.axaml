<UserControl x:Class="LittleBigMouse.Ui.Avalonia.ScreenFrame.MonitorFrameView"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:plugins="clr-namespace:LittleBigMouse.Plugins;assembly=LittleBigMouse.Plugins"
             xmlns:icons="clr-namespace:HLab.Icons.Avalonia.Icons;assembly=HLab.Icons.Wpf"
             xmlns:wpf="clr-namespace:HLab.Mvvm.Avalonia;assembly=HLab.Mvvm.Wpf"
             xmlns:icons1="clr-namespace:HLab.Icons.Avalonia.Icons;assembly=HLab.Icons.Avalonia"
             xmlns:avalonia="clr-namespace:HLab.Mvvm.Avalonia;assembly=HLab.Mvvm.Avalonia"
             xmlns:converters="clr-namespace:HLab.Mvvm.Avalonia.Converters;assembly=HLab.Mvvm.Avalonia"
             xmlns:converters2="clr-namespace:HLab.Base.Avalonia.Converters;assembly=HLab.Base.Avalonia"
             xmlns:annotations="clr-namespace:HLab.Mvvm.Annotations;assembly=HLab.Mvvm.Annotations"
             xmlns:screenFrame="clr-namespace:LittleBigMouse.Ui.Avalonia.ScreenFrame"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="500"
             HorizontalAlignment="Left"
             VerticalAlignment="Top"
             MinHeight="0"
             MinWidth="0"
             RenderTransformOrigin="0,0"
             Foreground="White"
             x:Name="UserControl"
             ClipToBounds="False"

             Margin="{Binding Margin}" 

             Width="{Binding Rotated.OutsideWidth}"
             Height="{Binding Rotated.OutsideHeight}"
             
             >
    <Design.DataContext>
        <screenFrame:MonitorFrameViewModelDesign />
    </Design.DataContext>

    <UserControl.ContextMenu>
        <ContextMenu>
            <MenuItem Header="Place from windows config" Click="ResetPlace_Click"/>
            <Separator />
            <MenuItem Header="Reset Size" Click="ResetSize_Click"/>
        </ContextMenu>
    </UserControl.ContextMenu>

    <UserControl.Resources>
        <converters:MultiScaleConverter x:Key="MultiScale"/>
        <converters:ScaleConverter x:Key="Scale"/>

        <LinearGradientBrush x:Key="SelectedBrush" 
                             StartPoint="0, 0.4" 
                             EndPoint="1, 0.6">
            <GradientStop Color="#FF002500" Offset="0"/>
            <GradientStop Color ="#FF526452" Offset="0.5"/>
            <GradientStop Color ="#FF051E05" Offset="0.5"/>
            <GradientStop Color="#FF002500" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="UnselectedBrush" 
                             StartPoint="0, 0.4" 
                             EndPoint="1, 0.6">
            <GradientStop Color="Black" Offset="0"/>
            <GradientStop Color ="#FF626161" Offset="0.5"/>
            <GradientStop Color ="#FF1E1E1E" Offset="0.5"/>
            <GradientStop Color="Black" Offset="1"/>
        </LinearGradientBrush>
        <converters2:ToBrushConverter 
            x:Key="Highlighter"  
            TrueValue="{StaticResource SelectedBrush}" 
            FalseValue="{StaticResource UnselectedBrush}"
            />
    </UserControl.Resources>

    <Grid>
        
        <Grid x:Name="GridRotated" 
              ColumnDefinitions="Auto,*,Auto"
              RowDefinitions="Auto,*,Auto"
              >

            <TextBlock.FontSize>
                <MultiBinding ConverterParameter="0.05" Converter="{StaticResource MultiScale}">
                    <Binding ElementName="GridRotated" Path="Bounds.Height"/>
                    <Binding ElementName="GridRotated" Path="Bounds.Width"/>
                </MultiBinding>
            </TextBlock.FontSize>

            <!--<Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Rotated.LeftBorder}"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="{Binding Rotated.RightBorder}"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding Rotated.TopBorder}"/>
                <RowDefinition/>
                <RowDefinition Height="{Binding Rotated.BottomBorder}"/>
            </Grid.RowDefinitions>-->

            
            <Border 
                Width="{Binding Rotated.LeftBorder}"
                Height="{Binding Rotated.TopBorder}"
                />

            <Border Grid.Row="2" Grid.Column="2"
                Width="{Binding Rotated.RightBorder}"
                Height="{Binding Rotated.BottomBorder}"
                />

            <Border Grid.Row="0" Grid.Column="0" 
                Grid.ColumnSpan="3"
                Grid.RowSpan="3"
                Background="{Binding Model.Selected, Converter={StaticResource Highlighter}, FallbackValue={StaticResource UnselectedBrush}}"
                >

				
				<Border.CornerRadius>
                <MultiBinding ConverterParameter="0.025" Converter="{StaticResource MultiScale}">
                    <Binding ElementName="GridRotated" Path="Bounds.Height"/>
                    <Binding ElementName="GridRotated" Path="Bounds.Width"/>
                </MultiBinding>
                </Border.CornerRadius>
            </Border>

            
            <!-- BottomRight Shadow -->
            <Border Grid.Column="0"  Grid.ColumnSpan="3" Grid.Row="0" Grid.RowSpan="3" BorderThickness="0,0,1,1" BorderBrush="Black">
				<Border.CornerRadius>
                    <MultiBinding ConverterParameter="0.025" Converter="{StaticResource MultiScale}">
                        <Binding ElementName="GridRotated" Path="Bounds.Height"/>
                        <Binding ElementName="GridRotated" Path="Bounds.Width"/>
                    </MultiBinding>
                </Border.CornerRadius>                
                
            </Border>
            
            <!-- TopLeft Light -->
            <Border Grid.Column="0"  Grid.ColumnSpan="3" Grid.Row="0" Grid.RowSpan="3" BorderThickness="1,1,0,0" BorderBrush="White" Opacity="0.3">
				<Border.CornerRadius>
                <MultiBinding ConverterParameter="0.025" Converter="{StaticResource MultiScale}">
                    <Binding ElementName="GridRotated" Path="Bounds.Height"/>
                    <Binding ElementName="GridRotated" Path="Bounds.Width"/>
                </MultiBinding>
                </Border.CornerRadius>
            </Border>
            
            <!-- BottomRight Light -->
            <Border Grid.Column="1"  Grid.Row="1" BorderThickness="0,0,2,2" Margin="-2" CornerRadius="2" BorderBrush="White" Opacity="0.4"/>
            
            <!-- TopLeft Shadow -->
            <Border Grid.Column="1"  Grid.Row="1" BorderThickness="2,2,0,0" Margin="-2" CornerRadius="2" BorderBrush="Black" Opacity="0.4"/>


        </Grid>

            <!-- Grid Containing objects that will be rotated -->
        <Grid   
            IsHitTestVisible="False"
            RenderTransform="{Binding Rotation}"
            ColumnDefinitions="Auto,*,Auto"
            RowDefinitions="Auto,*,Auto"
            >
            <Border 
                Width="{Binding Unrotated.LeftBorder}"
                Height="{Binding Unrotated.TopBorder}"
            />

            <Border Grid.Row="2" Grid.Column="2"
                    Width="{Binding Unrotated.RightBorder}"
                    Height="{Binding Unrotated.BottomBorder}"
            />

			<TextBlock.FontSize>
                <MultiBinding ConverterParameter="0.05" Converter="{StaticResource MultiScale}">
                    <Binding ElementName="GridRotated" Path="Bounds.Height"/>
                    <Binding ElementName="GridRotated" Path="Bounds.Width"/>
                </MultiBinding>
            </TextBlock.FontSize>


            <!--<Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Unrotated.LeftBorder,FallbackValue=20}"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="{Binding Unrotated.RightBorder,FallbackValue=20}"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding Unrotated.TopBorder,FallbackValue=20}"/>
                <RowDefinition/>
                <RowDefinition Height="{Binding Unrotated.BottomBorder,FallbackValue=20}"/>
            </Grid.RowDefinitions>-->
            <Border Grid.Row="0" Grid.Column="0" Name="TopRow"/>
            <Label 
                ClipToBounds="False" 
                Padding="0" 
                Grid.Row="0" 
                Grid.Column="1" 
                FontWeight="Black"
                Opacity="0.75"
                Content="{Binding Path=Model.Model.PnpDeviceName, FallbackValue=Unknown}">

				<Label.FontSize>
                    <Binding ElementName="TopRow" Path="Bounds.Height" Converter="{StaticResource Scale}" ConverterParameter="0.7"
                             FallbackValue="14" />
                </Label.FontSize>
                <Label.Foreground>
                    <LinearGradientBrush>
                        <GradientStop Offset="0" Color="#F0FFFFFF"/>
                        <GradientStop Offset="1" Color="#A0FFFFFF"/>
                    </LinearGradientBrush>
                </Label.Foreground>
            </Label>
            
            <Label 
                Padding="{Binding Path=LogoPadding}" 
                Margin="0" 
                HorizontalAlignment="Center" 
                VerticalAlignment="Center" 
                Grid.Row="2" 
                Grid.Column="1" 
                Foreground="LightGray"
                Opacity="0.8"
                >
                
                <icons1:IconView Path="{Binding Logo}"/>
            </Label>

            <!--<Label 
                Margin="0" 
                HorizontalAlignment="Right" 
                VerticalAlignment="Center" 
                Grid.Row="2" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                Content="{Binding PowerButton}"
                />-->
        </Grid>

        <Grid
            ColumnDefinitions="Auto,*,Auto"
            RowDefinitions="Auto,*,Auto"
            >
            
            <Border 
                Width="{Binding Rotated.LeftBorder}"
                Height="{Binding Rotated.TopBorder}"
            />

            <Border Grid.Row="2" Grid.Column="2"
                    Width="{Binding Rotated.RightBorder}"
                    Height="{Binding Rotated.BottomBorder}"
            />


            <!--<Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Rotated.LeftBorder,FallbackValue=20}"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="{Binding Rotated.RightBorder,FallbackValue=20}"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding Rotated.TopBorder,FallbackValue=20}"/>
                <RowDefinition/>
                <RowDefinition Height="{Binding Rotated.BottomBorder,FallbackValue=20}"/>
            </Grid.RowDefinitions>-->

			<TextBlock.FontSize>
                <MultiBinding ConverterParameter="0.05" Converter="{StaticResource MultiScale}">
                    <Binding ElementName="GridRotated" Path="Bounds.Height"/>
                    <Binding ElementName="GridRotated" Path="Bounds.Width"/>
                </MultiBinding>
            </TextBlock.FontSize>

            <Grid Grid.Column="1" Grid.Row="1" Background="{Binding BackgroundColor}"/>
            
            <ContentControl Grid.Column="1" Grid.Row="1" Content="{Binding WallPaper}"/>

            <Image Grid.Column="1" Grid.Row="1" 
                Source ="{Binding WallPaper}"
                Stretch="{Binding WallPaperStretch}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                />

            <StackPanel Grid.Column="1" Grid.Row="1">
            <Label  
                   FontSize="8" 
                   Content="{Binding MonitorsPresenter.MainViewModel.MonitorFrameViewMode, FallbackValue=N/A}"/>
            <Label  
                   FontSize="8" 
                   Content="{Binding Id, FallbackValue=N/A}"/>
            <Label  
                   FontSize="8" 
                   Content="{Binding MonitorsPresenter.Id, FallbackValue=N/A}"/>
            <Label  
                   FontSize="8" 
                   Content="{Binding MonitorsPresenter.MainViewModel.Id, FallbackValue=N/A}"/>

            </StackPanel>
            
            <avalonia:ViewLocator 
                Grid.Column="1" Grid.Row="1" 
                ViewClass="{x:Type plugins:IMonitorFrameContentViewClass}"
                ViewMode="{Binding MonitorsPresenter.MainViewModel.MonitorFrameViewMode, FallbackValue={x:Type annotations:DefaultViewMode}}"
                Model="{Binding Model}"
            />

        </Grid>
    </Grid>
</UserControl>
